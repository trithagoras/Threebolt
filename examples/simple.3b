fn sum(x: int, y: int) -> int {
    let z := x + y;
    return z;
}

fn main() {
    let x := 5;
    let y := 6;
    println(x + y);
}

fn complex_scope(x: int) {
    let y := x + 1;
    x += 1;

    if x < 5 {
        let z := y - x;
    } else {
        if y > 10 {
            let z := x - y;
        }
    }
}

fn sum(x: char, x: int) {
    return x + y;
}

fn main() {
    return;
}

/*
scope and symbol table id construction:

global
    global_simple
        global_simple_sum
            global_simple_sum_x
            global_simple_sum_y
            global_simple_sum_z

        global_simple_main
            global_simple_main_x
            global_simple_main_y

        global_simple_complex_scope
            global_simple_complex_scope_x
            global_simple_complex_scope_y
            global_simple_complex_scope_1   // uses scopeCount
                global_simple_complex_scope_1_z
            global_simple_complex_scope_2
                global_simple_complex_scope_2_1
                    global_simple_complex_scope_2_1_z

*/